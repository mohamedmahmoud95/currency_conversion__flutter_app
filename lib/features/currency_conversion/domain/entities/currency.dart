/// Currency entity representing a currency with its code, name, and flag emoji
class Currency {
  final String code;
  final String name;
  final String flag;
  final String symbol;

  const Currency({
    required this.code,
    required this.name,
    required this.flag,
    required this.symbol,
  });

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Currency && other.code == code;
  }

  @override
  int get hashCode => code.hashCode;

  @override
  String toString() => '$flag $code - $name';
}

/// Default currencies for fallback scenarios
class DefaultCurrencies {
  static const List<Currency> fallbackCurrencies = [
    Currency(code: 'USD', name: 'US Dollar', flag: 'ğŸ‡ºğŸ‡¸', symbol: '\$'),
    Currency(code: 'EUR', name: 'Euro', flag: 'ğŸ‡ªğŸ‡º', symbol: 'â‚¬'),
    Currency(code: 'GBP', name: 'British Pound', flag: 'ğŸ‡¬ğŸ‡§', symbol: 'Â£'),
    Currency(code: 'JPY', name: 'Japanese Yen', flag: 'ğŸ‡¯ğŸ‡µ', symbol: 'Â¥'),
    Currency(code: 'AUD', name: 'Australian Dollar', flag: 'ğŸ‡¦ğŸ‡º', symbol: 'A\$'),
    Currency(code: 'CAD', name: 'Canadian Dollar', flag: 'ğŸ‡¨ğŸ‡¦', symbol: 'C\$'),
    Currency(code: 'CHF', name: 'Swiss Franc', flag: 'ğŸ‡¨ğŸ‡­', symbol: 'CHF'),
    Currency(code: 'CNY', name: 'Chinese Yuan', flag: 'ğŸ‡¨ğŸ‡³', symbol: 'Â¥'),
    Currency(code: 'INR', name: 'Indian Rupee', flag: 'ğŸ‡®ğŸ‡³', symbol: 'â‚¹'),
    Currency(code: 'BRL', name: 'Brazilian Real', flag: 'ğŸ‡§ğŸ‡·', symbol: 'R\$'),
    Currency(code: 'RUB', name: 'Russian Ruble', flag: 'ğŸ‡·ğŸ‡º', symbol: 'â‚½'),
    Currency(code: 'KRW', name: 'South Korean Won', flag: 'ğŸ‡°ğŸ‡·', symbol: 'â‚©'),
    Currency(code: 'MXN', name: 'Mexican Peso', flag: 'ğŸ‡²ğŸ‡½', symbol: '\$'),
    Currency(code: 'SGD', name: 'Singapore Dollar', flag: 'ğŸ‡¸ğŸ‡¬', symbol: 'S\$'),
    Currency(code: 'HKD', name: 'Hong Kong Dollar', flag: 'ğŸ‡­ğŸ‡°', symbol: 'HK\$'),
    Currency(code: 'NZD', name: 'New Zealand Dollar', flag: 'ğŸ‡³ğŸ‡¿', symbol: 'NZ\$'),
    Currency(code: 'NOK', name: 'Norwegian Krone', flag: 'ğŸ‡³ğŸ‡´', symbol: 'kr'),
    Currency(code: 'SEK', name: 'Swedish Krona', flag: 'ğŸ‡¸ğŸ‡ª', symbol: 'kr'),
    Currency(code: 'DKK', name: 'Danish Krone', flag: 'ğŸ‡©ğŸ‡°', symbol: 'kr'),
    Currency(code: 'PLN', name: 'Polish Zloty', flag: 'ğŸ‡µğŸ‡±', symbol: 'zÅ‚'),
    Currency(code: 'TRY', name: 'Turkish Lira', flag: 'ğŸ‡¹ğŸ‡·', symbol: 'â‚º'),
    Currency(code: 'ZAR', name: 'South African Rand', flag: 'ğŸ‡¿ğŸ‡¦', symbol: 'R'),
    Currency(code: 'EGP', name: 'Egyptian Pound', flag: 'ğŸ‡ªğŸ‡¬', symbol: 'Â£'),
    Currency(code: 'NGN', name: 'Nigerian Naira', flag: 'ğŸ‡³ğŸ‡¬', symbol: 'â‚¦'),
    Currency(code: 'GHS', name: 'Ghanaian Cedi', flag: 'ğŸ‡¬ğŸ‡­', symbol: 'â‚µ'),
  ];
}